model Clinician {
  id          String    @id @default(uuid())
  name        String
  surname     String
  slug        String
  gender      Gender
  occupation  String
  phoneNumber String    @map("phone_number")
  email       String    @unique
  password    String
  role        UserRole  @default(EMPLOYEE)
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")

  consultations           Consultation[]
  NeurofunctionalRecord   NeurofunctionalRecord[]
  CardiorespiratoryRecord CardiorespiratoryRecord[]
  TraumaOrthopedicRecord  TraumaOrthopedicRecord[]

  @@map("clinicians")
}

model Patient {
  id                       String    @id @default(uuid())
  name                     String
  surname                  String
  slug                     String
  gender                   Gender
  birthDate                DateTime  @map("birth_date")
  cpf                      String    @unique
  phoneNumber              String    @map("phone_number")
  address                  String
  state                    String
  city                     String
  universalMedicalRecordId String?   @unique @map("universal_medical_record_id")
  email                    String    @unique
  password                 String
  role                     UserRole  @default(CLIENT)
  createdAt                DateTime  @default(now()) @map("created_at")
  updatedAt                DateTime? @updatedAt @map("updated_at")

  Consultation            Consultation[]
  UniversalMedicalRecord  UniversalMedicalRecord?  @relation("record", fields: [universalMedicalRecordId], references: [id])
  NeurofunctionalRecord   NeurofunctionalRecord?
  CardiorespiratoryRecord CardiorespiratoryRecord?
  TraumaOrthopedicRecord  TraumaOrthopedicRecord?

  @@map("patients")
}

enum UserRole {
  ADMIN
  EMPLOYEE
  CLIENT
}

enum Gender {
  male
  female
  nonbinary
  other
}
